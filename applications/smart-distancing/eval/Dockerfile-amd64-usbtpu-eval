# docker can be installed on the dev board following these instructions:
# 1) build: docker build -f Dockerfile-amd64-usbtpu -t "neuralet/amd64:eval-edgetpu" .
# 2) run: docker run -it --privileged -v /PATH_TO_CLONED_REPO_ROOT/:/repo neuralet/amd64:eval-edgetpu


FROM amd64/debian:buster

VOLUME  /repo

RUN apt-get update && apt-get install -y wget gnupg usbutils

RUN echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list
RUN wget -qO - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

RUN apt-get update && apt-get install -y python3-pip pkg-config libedgetpu1-std python3-wget

RUN python3 -m pip install https://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_x86_64.whl matplotlib

RUN apt-get update

RUN apt-get install -y python3-opencv python3-scipy

WORKDIR /repo/applications/smart-distancing/eval

# --model_path: tflite model path | --classes: the classes text file path | --minscore: the minimum confidence for deteting objects
# --img_path: validation set directory | --img_size: the input size of the model | --result_dir: the detection results with export here
# -gt: the groundtruth path | -t: minimum IOU threshold
ENTRYPOINT ["python3", "edgetpu_eval.py"]
CMD ["--model_path", "edgetpu/data/mobilenet_v1_face_mask_edgetpu.tflite", "--classes", "eval_files/sample_classes.txt","--minscore", "0.25", "--img_path", "val_images", "--img_size", "300,300,3", "--result_dir", "eval_files/detresults/", "-gt", "eval_files/groundtruths","-t", "0.5" ]
